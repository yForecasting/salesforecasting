% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transactional_to_timeseries.R
\name{transactional_to_timeseries}
\alias{transactional_to_timeseries}
\title{transactional_to_timeseries functions}
\usage{
transactional_to_timeseries(
  df,
  index,
  orig_freq,
  aggregated_freq = NULL,
  return_all = TRUE,
  columns_to_return = NULL
)
}
\arguments{
\item{df}{A transactional dataframe or matrix}

\item{index}{The index (or the column with the timestamps) of the dataframe. It should be in a date format.}

\item{orig_freq}{The original frequency of the dataframe.}

\item{aggregated_freq}{The frequency of the transformed dataframe.
NOTE 1: Default is set to null. With this setting it returns data at the original frequency
NOTE 2: Accepts values in the form: 'month', 'week', '2 months' etc}

\item{return_all}{A boolean variable indicating if all stored ids will be returned.
NOTE 1: Default is set to TRUE.
NOTE 2: If user passes in FALSE then variable columns_to_return will be considered}

\item{columns_to_return}{A list with the names of the columns that will be included.
NOTE 1: Default setting is NULL in accordance with return_all equal to TRUE.
NOTE 2: If return_all is FALSE then columns_to_return can not be NULL}
}
\value{
A data frame with time series objects or a single time series
}
\description{
Converts a transactional dataframe into a dataframe with time series objects, or a unique time series
User can select the aggregation level, in terms of frequency, the transformed df can be
If the transcational dataframe has skipped values due to non zero demand, the function fills this values
with zeros
}
\details{
For example:
|    Date     | ID | Value |    |    Date     |  a1  |  a2  |

| 01/02/2014  | a1 |   20  |    | 01/02/2014  |  20  |  80  |

| 01/02/2014  | a2 |   80  |    | 02/02/2014  |  30  |   0  |

| 02/02/2014  | a1 |   30  | => | 03/02/2014  |   0  |  14  |

| 03/02/2014  | a2 |   14  |    |     ..      |  ..  |  ..  |

|     ..      | .. |   ..  |    |     ..      |  ..  |  ..  |

|     ..      | .. |   ..  |    | 28/40/2014  |  12  |   0  |
| 28/40/2014  | a1 |   12  |
}
\examples{
dates <- c('2019-07-01', '2019-07-02', '2019-07-15', '2019-07-21')
AM <- c(90, 100, 50, 5 )
AC <- c(100, 100, 25, 4)
example_df <- data.frame(dates, AM, AC)
transactional_to_timeseries(example_df, index = 'dates', orig_freq = 'day')
transactional_to_timeseries(example_df, index = 'dates', orig_freq = 'day',
                                        aggregated_freq = 'week', return_all = FALSE,
                                        columns_to_return = c('AM'))


}
\author{
Filotas Theodosiou
}
